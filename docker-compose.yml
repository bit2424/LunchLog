services:
  backend:
    profiles: 
      - dev
    container_name: backend
    build: 
      context: .
      dockerfile: Dockerfile.dev
    restart: always
    volumes:
      - .:/app  # Only mount code for development
    ports:
      - "9000:8000"
    depends_on:
      - db
    environment:
      - DATABASE_URL=postgresql://lunchlog:lunchlog123@db:5432/lunchlog
      - SECRET_KEY=dev-secret-key-change-in-production
      - DEBUG=True
      - ALLOWED_HOSTS=*
    command: >
      bash -c "python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"

  db:
    profiles: 
      - dev
      - prod
    container_name: db
    image: postgres:15
    environment:
      POSTGRES_DB: lunchlog
      POSTGRES_USER: lunchlog
      POSTGRES_PASSWORD: lunchlog123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lunchlog"]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"
  
  backend_prod:
    profiles: 
      - prod
    container_name: backend_prod
    build: 
      context: .
      dockerfile: Dockerfile.prod
    restart: always
    volumes:
      - .:/app  # Only mount code for production
      - lunchlog_logs:/var/log/lunchlog  # Mount logs directory
    ports:
      - "9000:8000"
    depends_on:
      - db
    env_file:
      - .env
    command: >
      bash -c "python manage.py migrate &&
               python manage.py create_default_user &&
               gunicorn --bind 0.0.0.0:8000 lunchlog.wsgi:application"

volumes:
  postgres_data:  # Database volume
  lunchlog_logs:  # Logs volume